options=()
given_options=()
option_counter=0

add_option()
{
    if [[ "$#" -lt 2 ]]
    then
        die "genpkg: add_option: an option need at least a name and a description"
    fi
    if [[ "$#" -gt 4 ]]
    then
        die "genpkg: add_options: too many argument"
    fi
    local opt_name="$1"
    local opt_desc="$2"
    local opt_deps=()
    local opt_build_deps=()
    if [[ "$#" -ge 3 ]]
    then
        IFS=";" read -r -a opt_deps <<< "$3"
    fi
    if [[ "$#" -eq 4 ]]
    then
        IFS=";" read -r -a opt_build_deps <<< "$3"
    fi
    options+=("$option_counter,name::$opt_name")
    options+=("$option_counter,description::$opt_desc")
    if [[ "${#opt_deps[@]}" -gt 0 ]]
    then
        options+=("$option_counter,nb_dependencies::${#opt_deps[@]}")
        for ((i = 0; i < "${#opt_deps[@]}"; i += 1))
        do
            options+=("$option_counter,dependencies,$i::${opt_deps[$i]}")
        done
    fi
    if [[ "${#opt_build_deps[@]}" -gt 0 ]]
    then
        options+=("$option_counter,nb_build_dependencies::${#opt_build_deps[@]}")
        for ((i = 0; i < "${#opt_build_deps[@]}"; i += 1))
        do
            options+=("$option_counter,build_dependencies,$i::${opt_build_deps[$i]}")
        done
    fi
    ((option_counter += 1))
}

has_option() {
    local found=1

    if [[ "$#" -ne 1 ]]
    then
        die "genpkg: has_option: wrong number of argument"
    fi
    for option in "${given_options[@]}"
    do
        if [[ "$option" == "$1" ]]
        then
           found=0
        fi
    done
    return $found
}

option_exist() {
    local found=1

    if [[ "$#" -ne 1 ]]
    then
        die "genpkg: get_option: wrong number of argument"
    fi
    for ((i = 0; i < option_counter; i += 1))
    do
        local opt
        opt=$(get_option "${i},name")
        if [[ "$opt" == "$1" ]]
        then
            found=0
        fi
    done
    return $found
}

get_option() {
    if [[ "$#" -lt 1 || "$#" -gt 2 ]]
    then
        die "genpkg: get_option: wrong number of argument"
    fi
    if [[ "$#" -eq 1 ]]
    then
        for opt in "${options[@]}"
        do
            local key="${opt%%::*}"
            local value="${opt##*::}"
            if [[ "$key" == "$1" ]]
            then
                echo "$value"
                return 0
            fi
        done
    else
        for ((i = 0; i < option_counter; i += 1))
        do
            local name="$(get_option "$i,name")"
            if [[ "$name" == "$1" ]]
            then
                get_option "$i,$2"
                return "$?"
            fi
        done
    fi
    return 1
}
